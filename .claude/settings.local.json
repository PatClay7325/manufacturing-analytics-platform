{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(chmod:*)",
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(node:*)",
      "Bash(docker inspect:*)",
      "Bash(docker network:*)",
      "Bash(docker-compose:*)",
      "Bash(npm run test:e2e:*)",
      "Bash(npm install:*)",
      "Bash(npx playwright:*)",
      "Bash(npm run test:unit:*)",
      "Bash(NODE_ENV=test npm run test)",
      "Bash(NODE_OPTIONS=--no-warnings npm run test:e2e)",
      "Bash(NODE_OPTIONS=--no-warnings npm run test:unit)",
      "Bash(npm run test:*)",
      "Bash(npx vitest run:*)",
      "Bash(CI=true npx playwright test --grep=\"@smoke\")",
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(npx next build:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(npm run typecheck:*)",
      "Bash(sed:*)",
      "Bash(npx kill-port:*)",
      "Bash(true)",
      "Bash(curl:*)",
      "Bash(npx msw init:*)",
      "Bash(pkill:*)",
      "Bash(./run-audit.sh:*)",
      "Bash(for file in audit-tests/*.audit.ts)",
      "Bash(do mv \"$file\" \"$file%.audit.ts.spec.ts\")",
      "Bash(done)",
      "Bash(sudo apt-get:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(npx prisma generate:*)",
      "Bash(npx prisma migrate reset:*)",
      "Bash(npx prisma:*)",
      "Bash(npx tsx:*)",
      "Bash(for file in GaugeChart.tsx HeatmapChart.tsx ParetoChart.tsx GanttChart.tsx RealtimeChart.tsx HighchartsDashboard.tsx)",
      "Bash(do sed -i \"s/import Highcharts from ''@\\/config\\/highcharts''/import type * as Highcharts from ''highcharts''/g\" \"$file\")",
      "Bash(docker:*)",
      "Bash(kill:*)",
      "Bash(kill:*)",
      "Bash(npm uninstall:*)",
      "Bash(/mnt/d/Source/manufacturing-analytics-platform/src/app/charts-comparison)",
      "Bash(npm prune:*)",
      "Bash(sudo npx playwright:*)",
      "Bash(createdb:*)",
      "Bash(tsx scripts/test-system-comprehensive.ts:*)",
      "Bash(ollama list:*)",
      "Bash(psql:*)",
      "Bash(npm test:*)",
      "Bash(ss:*)",
      "Bash(tar:*)",
      "Bash(npm --version)",
      "Bash(./node_modules/.bin/tsc --noEmit --skipLibCheck)",
      "Bash(npm run analyze:errors:*)",
      "Bash(npm run fix:errors:dry:*)",
      "Bash(npm run fix:errors:*)",
      "Bash(timeout 10 npm run dev)",
      "Bash(timeout 15 npm run dev)",
      "Bash(npx next lint:*)",
      "Bash(npm start)",
      "Bash(npx next dev:*)",
      "Bash(npx ts-node:*)",
      "Bash(/mnt/d/Source/manufacturing-analytics-platform/scripts/batch-fix-event-handlers.sh:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}