# Default values for manufacturing-analytics.
replicaCount: 2

image:
  repository: manufacturing-analytics
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "3000"
  prometheus.io/path: "/api/metrics"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
  hosts:
    - host: manufacturing-analytics.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: manufacturing-analytics-tls
      hosts:
        - manufacturing-analytics.example.com

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Environment variables
env:
  - name: NODE_ENV
    value: "production"
  - name: NEXT_TELEMETRY_DISABLED
    value: "1"

# Secrets (will be created from external secrets)
envFrom:
  - secretRef:
      name: manufacturing-analytics-secrets

# Volume mounts for writable directories
volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: logs
    mountPath: /app/logs
  - name: next-cache
    mountPath: /app/.next/cache

volumes:
  - name: tmp
    emptyDir: {}
  - name: logs
    emptyDir: {}
  - name: next-cache
    emptyDir: {}

# Database configuration
postgresql:
  enabled: true
  auth:
    username: manufacturing
    database: manufacturing_analytics
    existingSecret: postgresql-secret
  primary:
    persistence:
      enabled: true
      size: 20Gi
    resources:
      limits:
        memory: 2Gi
        cpu: 1000m
      requests:
        memory: 256Mi
        cpu: 250m

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: true
    existingSecret: redis-secret
  master:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      limits:
        memory: 512Mi
        cpu: 500m
      requests:
        memory: 128Mi
        cpu: 100m

# Prometheus monitoring
prometheus:
  enabled: true
  alertmanager:
    enabled: true
  pushgateway:
    enabled: false

# Health checks
livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Network policies
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
      ports:
      - protocol: TCP
        port: 3000