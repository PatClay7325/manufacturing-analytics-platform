name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run affected tests
        run: |
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          
          # Run tests for changed files
          if echo "$CHANGED_FILES" | grep -E '\.(ts|tsx|js|jsx)$'; then
            npm run test -- --changed origin/${{ github.base_ref }}...HEAD
          fi
      
      - name: Check code formatting
        run: |
          npm run format -- --check
          if [ $? -ne 0 ]; then
            echo "Code is not properly formatted. Please run 'npm run format' locally."
            exit 1
          fi
      
      - name: Validate commit messages
        run: |
          # Check commit messages follow conventional commits
          npm install -g @commitlint/cli @commitlint/config-conventional
          echo "module.exports = {extends: ['@commitlint/config-conventional']}" > commitlint.config.js
          git log origin/${{ github.base_ref }}..HEAD --format=%s | commitlint --from=origin/${{ github.base_ref }}

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Build application
        run: npm run build
      
      - name: Run visual regression tests
        run: |
          # Add visual regression test script
          cat > visual-regression.spec.ts << 'EOF'
          import { test, expect } from '@playwright/test';
          
          const pages = [
            { name: 'home', path: '/' },
            { name: 'dashboard', path: '/dashboard' },
            { name: 'equipment', path: '/equipment' },
            { name: 'alerts', path: '/alerts' },
            { name: 'chat', path: '/manufacturing-chat' }
          ];
          
          for (const page of pages) {
            test(`Visual regression: ${page.name}`, async ({ page: browserPage }) => {
              await browserPage.goto(page.path);
              await browserPage.waitForLoadState('networkidle');
              await expect(browserPage).toHaveScreenshot(`${page.name}.png`, {
                fullPage: true,
                animations: 'disabled'
              });
            });
          }
          EOF
          
          npx playwright test visual-regression.spec.ts
      
      - name: Upload visual diff
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-regression-diff
          path: test-results/
          retention-days: 7

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for dependency changes
        id: dep-check
        run: |
          if git diff origin/${{ github.base_ref }}...HEAD --name-only | grep -E 'package(-lock)?\.json'; then
            echo "dependencies_changed=true" >> $GITHUB_OUTPUT
          else
            echo "dependencies_changed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Review dependency changes
        if: steps.dep-check.outputs.dependencies_changed == 'true'
        run: |
          echo "### Dependency Changes Detected" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Show added dependencies
          echo "#### Added Dependencies:" >> $GITHUB_STEP_SUMMARY
          git diff origin/${{ github.base_ref }}...HEAD package.json | grep '^+' | grep -v '+++' | grep '"' || echo "None" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Show removed dependencies
          echo "#### Removed Dependencies:" >> $GITHUB_STEP_SUMMARY
          git diff origin/${{ github.base_ref }}...HEAD package.json | grep '^-' | grep -v '---' | grep '"' || echo "None" >> $GITHUB_STEP_SUMMARY
      
      - name: Check for outdated dependencies
        run: |
          npm outdated || true
          
  pr-size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check PR size
        run: |
          # Count lines changed
          LINES_ADDED=$(git diff origin/${{ github.base_ref }}...HEAD --numstat | awk '{sum+=$1} END {print sum}')
          LINES_REMOVED=$(git diff origin/${{ github.base_ref }}...HEAD --numstat | awk '{sum+=$2} END {print sum}')
          TOTAL_CHANGES=$((LINES_ADDED + LINES_REMOVED))
          
          echo "Lines added: $LINES_ADDED"
          echo "Lines removed: $LINES_REMOVED"
          echo "Total changes: $TOTAL_CHANGES"
          
          # Warn if PR is too large
          if [ $TOTAL_CHANGES -gt 1000 ]; then
            echo "::warning::This PR changes $TOTAL_CHANGES lines. Consider breaking it into smaller PRs."
          fi
          
          # Add PR size label
          if [ $TOTAL_CHANGES -lt 100 ]; then
            echo "pr_size=small" >> $GITHUB_OUTPUT
          elif [ $TOTAL_CHANGES -lt 500 ]; then
            echo "pr_size=medium" >> $GITHUB_OUTPUT
          else
            echo "pr_size=large" >> $GITHUB_OUTPUT
          fi