version: '3.8'

services:
  # PostgreSQL Database with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: manufacturing-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-manufacturing}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-postgres:/docker-entrypoint-initdb.d
    networks:
      - manufacturing-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    container_name: manufacturing-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - manufacturing-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MQTT Broker for real-time sensor data
  mqtt:
    image: eclipse-mosquitto:2
    container_name: manufacturing-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./configs/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mqtt-data:/mosquitto/data
      - mqtt-log:/mosquitto/log
    networks:
      - manufacturing-network

  # Ollama for LLM support
  ollama:
    image: ollama/ollama:latest
    container_name: manufacturing-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - manufacturing-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # Prometheus for metrics (your own metrics collection)
  prometheus:
    image: prom/prometheus:latest
    container_name: manufacturing-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - manufacturing-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

volumes:
  postgres-data:
  redis-data:
  mqtt-data:
  mqtt-log:
  ollama-data:
  prometheus-data:

networks:
  manufacturing-network:
    driver: bridge