openapi: 3.0.0
info:
  title: Manufacturing Analytics Platform - Agent API
  description: ISO-compliant multi-agent system for manufacturing analytics
  version: 1.0.0
  contact:
    name: API Support
    email: api@manufacturing-analytics.com

servers:
  - url: https://api.manufacturing-analytics.com/v1
    description: Production server
  - url: https://staging-api.manufacturing-analytics.com/v1
    description: Staging server
  - url: http://localhost:3000/api
    description: Development server

security:
  - BearerAuth: []
  - ApiKeyAuth: []

tags:
  - name: Agents
    description: Agent system operations
  - name: Health
    description: System health monitoring
  - name: Auth
    description: Authentication endpoints

paths:
  /health:
    get:
      tags: [Health]
      summary: Health check
      description: Check the health status of the system
      security: []
      responses:
        '200':
          description: System is healthy or degraded but operational
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '503':
          description: System is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  /agents/classify:
    post:
      tags: [Agents]
      summary: Classify intent
      description: Classify user input into manufacturing-specific intents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassifyRequest'
      responses:
        '200':
          description: Intent classified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassifyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /agents/iso-compliance:
    post:
      tags: [Agents]
      summary: Get ISO compliance information
      description: Get relevant ISO standards and compliance information for an intent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplianceRequest'
      responses:
        '200':
          description: Compliance information retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /agents/memory/prune:
    post:
      tags: [Agents]
      summary: Prune memory
      description: Manually trigger memory pruning (requires admin permissions)
      security:
        - BearerAuth: [system:admin]
        - ApiKeyAuth: [system:admin]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PruneRequest'
      responses:
        '200':
          description: Memory pruned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PruneResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

    get:
      tags: [Agents]
      summary: Get memory statistics
      description: Get current memory usage statistics
      security:
        - BearerAuth: [system:audit]
        - ApiKeyAuth: [system:audit]
      responses:
        '200':
          description: Statistics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryStatistics'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    HealthStatus:
      type: object
      required: [status, timestamp, version, checks]
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        checks:
          type: object
          properties:
            database:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            memory:
              type: object
              properties:
                status:
                  type: string
                usage:
                  type: number
            cron:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string

    ClassifyRequest:
      type: object
      required: [sessionId, input]
      properties:
        sessionId:
          type: string
          description: Unique session identifier
        input:
          type: string
          minLength: 1
          maxLength: 1000
          description: User input to classify
        context:
          type: object
          description: Additional context

    ClassifyResponse:
      type: object
      required: [intent, confidence]
      properties:
        intent:
          type: string
          description: Classified intent
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: Classification confidence
        description:
          type: string
          description: Intent description
        suggestedActions:
          type: array
          items:
            type: string
          description: Suggested next actions
        requiresAuth:
          type: boolean
          description: Whether this intent requires authentication
        isoStandards:
          type: array
          items:
            type: string
          description: Relevant ISO standards

    ComplianceRequest:
      type: object
      required: [intent]
      properties:
        intent:
          type: string
          description: Manufacturing intent
        context:
          type: object
          description: Additional context
        includeMetrics:
          type: boolean
          default: true
        includeRequirements:
          type: boolean
          default: true

    ComplianceResponse:
      type: object
      required: [standards]
      properties:
        standards:
          type: array
          items:
            $ref: '#/components/schemas/ISOStandard'
        primaryStandard:
          type: string
          description: Primary applicable standard
        recommendations:
          type: array
          items:
            type: string

    ISOStandard:
      type: object
      required: [standardId, title, description]
      properties:
        standardId:
          type: string
          enum: [ISO9001, ISO14001, ISO14224, ISO22400-2, ISO45001, ISO50001, ISO55000]
        title:
          type: string
        description:
          type: string
        requirements:
          type: array
          items:
            type: string
        metrics:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              unit:
                type: string
              calculation:
                type: string
        documentation:
          type: array
          items:
            type: string
        auditChecks:
          type: array
          items:
            type: string

    PruneRequest:
      type: object
      properties:
        retentionDays:
          type: integer
          minimum: 1
        batchSize:
          type: integer
          minimum: 1
          maximum: 10000
        pruneSessionMemory:
          type: boolean
        pruneAuditTrail:
          type: boolean
        pruneAlerts:
          type: boolean
        pruneMetrics:
          type: boolean

    PruneResponse:
      type: object
      required: [sessionMemoryDeleted, auditTrailDeleted, alertsDeleted, metricsDeleted, totalDeleted, duration, errors]
      properties:
        sessionMemoryDeleted:
          type: integer
        auditTrailDeleted:
          type: integer
        alertsDeleted:
          type: integer
        metricsDeleted:
          type: integer
        totalDeleted:
          type: integer
        duration:
          type: integer
          description: Duration in milliseconds
        errors:
          type: array
          items:
            type: string

    MemoryStatistics:
      type: object
      properties:
        sessionMemoryCount:
          type: integer
        auditTrailCount:
          type: integer
        alertsCount:
          type: integer
        metricsCount:
          type: integer
        oldestSessionMemory:
          type: string
          format: date-time
          nullable: true
        oldestAuditTrail:
          type: string
          format: date-time
          nullable: true

    Error:
      type: object
      required: [error]
      properties:
        error:
          type: string
        code:
          type: string
        details:
          type: object

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    RateLimited:
      description: Rate limit exceeded
      headers:
        Retry-After:
          schema:
            type: integer
          description: Seconds until rate limit resets
        X-RateLimit-Limit:
          schema:
            type: integer
          description: Rate limit maximum
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: Remaining requests
        X-RateLimit-Reset:
          schema:
            type: string
            format: date-time
          description: Rate limit reset time
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'