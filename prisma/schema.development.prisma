// =============================================================================
// DEVELOPMENT SCHEMA - Safe for modifications
// =============================================================================
// This schema is for DEVELOPMENT ONLY and can be modified freely.
// Changes here will NOT affect production.
//
// Environment: DEVELOPMENT
// Protection Level: UNLOCKED
// =============================================================================

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "views", "postgresqlExtensions"]
  output          = "./generated/dev-client"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL_DEV")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL_DEV")
  schemas           = ["public", "monitoring", "audit"]
}

// =============================================================================
// DEVELOPMENT MODELS - Simplified for testing
// =============================================================================

model Site {
  id        Int         @id @default(autoincrement())
  code      String      @unique @db.VarChar(20)
  name      String      @db.VarChar(100)
  areas     Area[]

  @@map("sites")
}

model Area {
  id            Int             @id @default(autoincrement())
  code          String          @unique @db.VarChar(20)
  name          String          @db.VarChar(100)
  siteId        Int             @map("site_id")
  site          Site            @relation(fields: [siteId], references: [id])
  workCenters   WorkCenter[]

  @@map("areas")
}

model WorkCenter {
  id        Int         @id @default(autoincrement())
  code      String      @unique @db.VarChar(20)
  name      String      @db.VarChar(100)
  areaId    Int         @map("area_id")
  area      Area        @relation(fields: [areaId], references: [id])
  equipment Equipment[]

  @@map("work_centers")
}

model Equipment {
  id             Int           @id @default(autoincrement())
  code           String        @unique @db.VarChar(50)
  name           String        @db.VarChar(200)
  workCenterId   Int           @map("work_center_id")
  isActive       Boolean       @default(true) @map("is_active")
  createdAt      DateTime      @default(now()) @map("created_at")
  
  workCenter     WorkCenter    @relation(fields: [workCenterId], references: [id])
  production     Production[]

  @@map("equipment")
}

model Product {
  id         Int          @id @default(autoincrement())
  code       String       @unique @db.VarChar(50)
  name       String       @db.VarChar(200)
  production Production[]

  @@map("products")
}

model Production {
  id              Int       @id @default(autoincrement())
  equipmentId     Int       @map("equipment_id")
  productId       Int       @map("product_id")
  startTime       DateTime  @map("start_time")
  endTime         DateTime? @map("end_time")
  goodParts       Int       @default(0) @map("good_parts")
  scrapParts      Int       @default(0) @map("scrap_parts")
  
  equipment       Equipment @relation(fields: [equipmentId], references: [id])
  product         Product   @relation(fields: [productId], references: [id])

  @@map("production")
}

// Simple audit for development
model AuditLog {
  id          Int       @id @default(autoincrement())
  tableName   String    @map("table_name")
  action      String
  recordId    String    @map("record_id")
  createdAt   DateTime  @default(now()) @map("created_at")

  @@map("audit_log")
}